/*You can nest properties to keep things organized in a similar way to the DOM*/

.banner {
  font-family: 'Pacifico', cursive;
  height: 400px;
  background-image: url("lemonade.jpg");
  border: {
    top: 4px solid black;
    bottom: 4px solid black;
  }
  .slogan {
    position: absolute;
    border: 4px solid black;
    top: 200px;
    left: 25%;
    width: 50%;
    height: 200px;
    text-align: center;
    span {
      font-size: 24px;
      line-height: 200px;
    }
  }
}

/*Variables can be used in Sass so that when updating things you only have to change it in on location, in order to apply those changes every where*/

/*In Sass $ is used to reference and define a variable.*/
/*This is the creation and definition of a Sass variable, use the reference name within the code for use*/
$translucent-white: rgba(255, 255, 255, 0.3);

/*variables can have several different types. Below is a vairable with a type of Number, they can be strings, booleans, null*/
$icon-square-length: 300px;

/*variables can also be lists and maps, lists must be denoted with spaces or commas*/

/*In Sass, the & character is used to specify exactly where a parent selector should be inserted.*/


&:hover{
	transform: (rotatey(-180deg));
}

/*In Sass, a mixin lets you make groups of CSS declarations that you want to reuse throughout your site.*/

@mixin backface-visibility {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -o-backface-visibility: hidden;
}


/* 	Mixins can take multiple arguments.
Sass allows you to explicitly define each argument in your @include statement.
When values are explicitly specified you can send them out of order.
If a mixin definition has a combination of arguments with and without a default value, you should define the ones with no default value first.
Mixins can be nested.*/

/*In Sass, string interpolation is the process of placing a variable string in the middle of two other strings.*/

/*Mixins are a powerful tool that allow you to keep your code DRY. Their ability to take in arguments, assign default values to those arguments, and accept said arguments in whatever format is most readable and convenient for you makes the mixin Sass's most popular directive.
The & selector* is a Sass construct that allows for expressive flexibility by referencing the parent selector when working with CSS psuedo elements and classes.
String interpolation is the glue that allows you to insert a string in the middle of another when it is in a variable format. Its applications vary, but the ability to interpolate is especially useful for passing in file names.*/




